use crate::network::messages::message::{Block, Transaction};
use k256::Secp256k1;
use ecdsa::SigningKey; // these are generated by `prost`

/// Engine is a trait abstraction for an algorithm agnostic consensus engine.
pub trait Engine: Send + Sync {
    /// add_transaction will be called each time the server sees a tx for the
    /// first time.
    /// if the transaction is already seen, it should be ignored
    fn add_transaction(&self, transaction: Transaction);
    // takes a transaction object directly!

    /// relay the created block to the p2p network
    fn get_new_block(&mut self) -> Option<Block>;
}
